# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import exchange_rates_pb2 as exchange__rates__pb2


class ExchangeRateStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetRates = channel.unary_stream(
        '/ExchangeRate/GetRates',
        request_serializer=exchange__rates__pb2.Currencies.SerializeToString,
        response_deserializer=exchange__rates__pb2.Rate.FromString,
        )
    self.GetTest = channel.unary_unary(
        '/ExchangeRate/GetTest',
        request_serializer=exchange__rates__pb2.NoParams.SerializeToString,
        response_deserializer=exchange__rates__pb2.MonetaryType.FromString,
        )


class ExchangeRateServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetRates(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExchangeRateServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetRates': grpc.unary_stream_rpc_method_handler(
          servicer.GetRates,
          request_deserializer=exchange__rates__pb2.Currencies.FromString,
          response_serializer=exchange__rates__pb2.Rate.SerializeToString,
      ),
      'GetTest': grpc.unary_unary_rpc_method_handler(
          servicer.GetTest,
          request_deserializer=exchange__rates__pb2.NoParams.FromString,
          response_serializer=exchange__rates__pb2.MonetaryType.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ExchangeRate', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
